# This is an example configuration file that might need modifications
# to properly run in your environment
#
# API KEYS
##########
# Some services require you to obtain an API key and provide it here in
# the configuration:
#
#     * OpenExchangeRates (has a free subscription)
#     * Currencylayer (has a a free subscription)
#     * Quandl (has a a free subscription)
#     * BitcoinAverage (has a a free subscription)
#     * Fixer (has a free subscription)
#     * AlphaVantage (has a free subscription)
#     * WorldCoinIndex (has a free subscription)
#
# The corresponding variables can be defined in the `exchanges` key.


# If true, a new price feed needs manual confirmation
confirm: False

# The producer name(s)
producer: alex-pu

# Exchange settings (Here, you may need to add API keys)
exchanges:

  binance:
      klass: Binance
      quotes:
          - BTS
          - BTC
      bases:
          - BTC
          - USDT

  okcoin:
      klass: Okcoin
      quotes:
          - BTC
      bases:
          - USD

  graphene:
    klass: Graphene
    quotes:
      - GPH
    bases:
      - RUDEX.BTS
      - RUDEX.USDT
      - RUDEX.BTC
    aliases:
        RUDEX.BTS: BTS
        RUDEX.USDT: USDT
        RUDEX.BTC: BTC


  bitstamp:
      klass: Bitstamp
      quotes:
          - BTC
      bases:
          - USD

  #coinmarketcap:
  #    klass: Coinmarketcap
  #    quotes:
  #        - BTC
  #        - BTS
  #    bases:
  #        - BTC
  #        - USD


# default settings
default:
    # max age of a feed
    maxage: 172800

    # minimum percentage that forces a publish
    min_change: 0.01

    # warn if price change goes above this percentage
    warn_change: 50

    # skip publishing a feed if price goes above this percentage
    skip_change: 60

    # skip publishing a feed if producer is not an active witness.
    skip_inactive_witness: True

    # how to derive a single price from several sources
    # Choose from: "median", "mean", or "weighted" (by volume)
    metric: weighted

    # Select sources for this particular asset. Each source
    # has its own fetch() method and collects several markets
    # any market of an exchanges is considered but only the
    # current asset's price is derived
    #
    # Choose from: - "*": all,
    #              - loaded exchanges (see below)
    sources:
         -*
#        - fixer
#        - binance
#        - currencylayer
#        - btcavg
#        - quandl
#        - bitstamp
#        - okcoin
#        - graphene
#        - poloniex
#        - zb
#        - coinmarketcap
#        - aex
#        - bitshares
#        - lbank
#        - magicwallet
#        -

    # Core exchange factor for paying transaction fees in
    # non-GPH assets. Premium of 10%
    core_exchange_factor: 1.1

    # maintenance collateral ratio (percentage)
    maintenance_collateral_ratio: 200.0

    # Maximum short squeeze ratio
    maximum_short_squeeze_ratio: 110.0

    # If set to True, prices are also derived via 3
    # markets instead of just two:
    # E.g.: GOLD:USD -> USD:BTC -> BTC:NBS = GOLD:NBS
    derive_across_3markets: True

    #loopholes_protection_days: 0.25

# Enabled assets that are derived if no asset is provided via command
# line
assets:
    USD:
    #CNY:
      #maximum_short_squeeze_ratio: 102.0
      #core_exchange_factor: 1.2
      #maintenance_collateral_ratio: 1.6
    #TRY:
    #RUB:
    #EUR:
    #AUD:
    #JPY:
    #CHF:
    #MXN:
    #GBP:
    #CAD:
    #ARS:
    #HKD:
    #SEK:
    #SGD:
    #NZD:
    #KRW:
    #GOLD:
    #SILVER:

# Intermediate assets are useful for 2 and 3 market price derivation
# E.g.: USD:BTC -> BTC:NBS = USD:NBS
#       GOLD:USD -> USD:BTC -> BTC:NBS = GOLD:NBS
intermediate_assets:
    - USDT
    - BTS
    #- USD
    #- GPH
    - BTC

# Historical computed prices storage, to be used in next runs to compute the moving average.
#history:
    # Save as CSV files in a (local) directory
#    klass: FileHistory
#    dirname: prices_db